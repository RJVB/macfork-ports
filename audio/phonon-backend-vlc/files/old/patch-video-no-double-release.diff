diff --git a/src/video/mac/nsvideoview.h b/src/video/mac/nsvideoview.h
index 9485283..07be85b 100644
--- a/src/video/mac/nsvideoview.h
+++ b/src/video/mac/nsvideoview.h
@@ -19,11 +19,19 @@
 #define NSVIDEOVIEW_H
 
 #import <Cocoa/Cocoa.h>
+#include "vlcmacwidget.h"
 
 @interface VideoView : NSView
+
 - (void)addVoutSubview: (NSView *)view;
 - (void)removeVoutSubview: (NSView *)view;
 - (BOOL)stretchesVideo;
+
+#if !__has_feature(objc_arc)
+@property (nonatomic) VlcMacWidget *qtWidget;
+- (oneway void)release OBJC_ARC_UNAVAILABLE;
+#endif //objc_arc
+
 @end
 
 #endif // NSVIDEOVIEW_H
diff --git a/src/video/mac/nsvideoview.mm b/src/video/mac/nsvideoview.mm
index ef97b62..661b177 100644
--- a/src/video/mac/nsvideoview.mm
+++ b/src/video/mac/nsvideoview.mm
@@ -17,6 +17,39 @@
 
 #include "nsvideoview.h"
 
+#if !__has_feature(objc_arc)
+
+#include <stdlib.h>
+#include <stddef.h>
+#include <execinfo.h>
+#include <errno.h>
+#include <string.h>
+
+#include <string>
+
+using namespace std;
+
+const char **get_backtrace(int levels=-1)
+{
+    void* trace[256];
+    static char **strings = NULL;
+    int i, n = (levels > 0 && levels < 256)? levels : 256;
+
+    errno = 0;
+    if (strings) {
+        free(strings);
+        strings = NULL;
+    }
+    n = backtrace(trace, n);
+    if( n > 0 ){
+        errno = 0;
+        strings = backtrace_symbols( trace, n );
+    }
+
+    return (const char**)(strings);
+}
+#endif //objc_arc
+
 @implementation VideoView
 - (void)addVoutSubview:(NSView *)view
 {
@@ -34,4 +67,32 @@
       return NO;  
 }
 
+#if !__has_feature(objc_arc)
+- (oneway void)release
+{
+    if ([self retainCount] >= 1) {
+        [super release];
+//         if ([self retainCount] <= 1 && _qtWidget) {
+//             _qtWidget->setCocoaView(0);
+//             _qtWidget = 0;
+//             NSLog(@"unregistered");
+//         }
+    } else {
+        const char **bt = get_backtrace(8);
+        if (bt) {
+            NSLog(@"Ignoring attempt to release dangling %@ for VlcMacWidget %p:\n\t%s\n\t%s\n\t%s\n\t%s\n\t%s\n\t%s\n\t%s",
+                self, _qtWidget,
+                bt[1], bt[2], bt[3], bt[4], bt[5], bt[6], bt[7]);
+        } else {
+            NSLog(@"Ignoring attempt to release dangling %@ for VlcMacWidget %p, count=%d",
+                  self, _qtWidget, [self retainCount]);
+        }
+//         if (_qtWidget) {
+//             _qtWidget->setCocoaView(0);
+//             _qtWidget = 0;
+//         }
+    }
+}
+#endif // objc_arc
+
 @end
diff --git a/src/video/mac/vlcmacwidget.mm b/src/video/mac/vlcmacwidget.mm
index b3b2eb0..9f94c03 100644
--- a/src/video/mac/vlcmacwidget.mm
+++ b/src/video/mac/vlcmacwidget.mm
@@ -25,17 +25,19 @@ VlcMacWidget::VlcMacWidget(QWidget *parent) : QMacCocoaViewContainer(0, parent)
 {
     // Many Cocoa objects create temporary autorelease objects,
     // so create a pool to catch them.
-    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
+    @autoreleasepool {
 
-    VideoView *videoView = [[VideoView alloc] init];
+        VideoView *videoView = [[VideoView alloc] init];
+#if !__has_feature(objc_arc)
+        [videoView setQtWidget:this];
+#endif // objc_arc
 
-    this->setCocoaView(videoView);
-
-    // Release our reference, since our super class takes ownership and we
-    // don't need it anymore.
-    [videoView release];
-
-    // Clean up our pool as we no longer need it.
-    [pool release];
+        this->setCocoaView(videoView);
 
+        // Release our reference, since our super class takes ownership and we
+        // don't need it anymore.
+#if !__has_feature(objc_arc)
+        [videoView release];
+#endif // objc_arc
+    }
 }
