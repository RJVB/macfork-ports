--- orig.CMakeLists.txt	2016-04-18 06:25:19.000000000 +0200
+++ CMakeLists.txt	2016-09-18 15:34:04.000000000 +0200
@@ -53,11 +53,13 @@
 set(QT_QTOPENGL_FOUND Qt5OpenGL_FOUND)
 
 set(REQUIRED_QT_VERSION 5.2.0)
-find_package(Qt5X11Extras ${REQUIRED_QT_VERSION})
-set_package_properties(Qt5OpenGL PROPERTIES
-    TYPE OPTIONAL
-    PURPOSE "Qt5X11Extras is needed for the x11renderer"
-    URL "http://doc.qt.io/qt-5/qtx11extras-index.html")
+if(NOT APPLE)
+    find_package(Qt5X11Extras ${REQUIRED_QT_VERSION})
+    set_package_properties(Qt5OpenGL PROPERTIES
+        TYPE OPTIONAL
+        PURPOSE "Qt5X11Extras is needed for the x11renderer"
+        URL "http://doc.qt.io/qt-5/qtx11extras-index.html")
+endif()
 
 include(ECMPoQmTools)
 
--- gstreamer/orig.CMakeLists.txt	2016-04-18 06:25:19.000000000 +0200
+++ gstreamer/CMakeLists.txt	2016-09-18 15:34:04.000000000 +0200
@@ -88,12 +88,12 @@
     list(APPEND phonon_gstreamer_SRCS glrenderer.cpp)
 endif ()
 
-set(BUILD_X11RENDERER TRUE)
+set(BUILD_X11RENDERER FALSE)
 if (PHONON_BUILD_PHONON4QT5)
     if (Qt5X11Extras_FOUND)
         set(BUILD_X11RENDERER TRUE)
     endif()
-elseif (NOT WIN32)
+elseif (NOT WIN32 AND NOT APPLE)
     set(BUILD_X11RENDERER TRUE)
 endif()
 
--- gstreamer/orig.videowidget.cpp	2019-08-27 15:27:22.000000000 +0200
+++ gstreamer/videowidget.cpp	2019-12-23 22:52:47.000000000 +0100
@@ -80,10 +80,12 @@
 
 void VideoWidget::updateWindowID()
 {
+#ifdef BUILD_X11RENDERER
     X11Renderer *render = dynamic_cast<X11Renderer*>(m_renderer);
     if (render) {
         render->setOverlay();
     }
+#endif
 }
 
 void Gstreamer::VideoWidget::syncX()
